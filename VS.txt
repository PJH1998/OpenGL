#version 400 core

	attribute vec4 vtxPosition;

	attribute vec4 a_Color;

	out vec4 v_Color;
	out vec4 v_Pos;
	out vec3 normalVec;
	out vec3 lightDir;

	uniform mat4 trans;
	uniform mat4 ViewMat;
	uniform mat4 ProMat;
	uniform mat4 X_CRMat;
	uniform mat4 Y_CRMat;
	uniform mat4 F_Rotate;
	uniform mat4 S_Rotate;
	uniform mat4 T_Rotate;
	
	uniform vec3 uLightPos;


void main()
{	
	
	mat4 worldMat = S_Rotate * trans * F_Rotate;
	vec4 vPos = ViewMat * worldMat * vtxPosition;
	
	v_Color = a_Color ;
	v_Pos = vPos;
	vec4 vLightPos = ViewMat * vec4(uLightPos, 1.0);
	lightDir = normalize(vLightPos.xyz - vPos.xyz);
	vec3 inNormal = normalize(vtxPosition.xyz);
	vec4 transNorm = ViewMat * worldMat * vec4(inNormal, 0.0);
	normalVec = normalize(transNorm.xyz);

	gl_Position = ProMat * Y_CRMat * X_CRMat * T_Rotate * vPos;

}